{"version":3,"file":"static/js/880.b2cd1d79.chunk.js","mappings":"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","sources":["Components/Layouts/MainLayout.tsx","Components/TextFields/BaseTextField.tsx","Components/Toolbar/BaseToolbarView.tsx","Components/Views/BasePaper.tsx","../node_modules/@mui/icons-material/esm/FolderOpenOutlined.js","Components/Views/EmptyView.tsx","../node_modules/@mui/icons-material/esm/Check.js","Views/Courses/CreateCourseToolbarView.tsx","Components/TextFields/BaseNumberTextField.tsx","Components/Forms/Courses/CreateCourseForm.tsx","Components/Forms/Courses/CreateCourseExerciseForm.tsx","Components/Toolbar/BoxToolbarView.tsx","Views/Courses/CreateCourseExerciseView.tsx","Views/Courses/CreateCourseExercisesView.tsx","../node_modules/@mui/icons-material/esm/CloudUploadOutlined.js","../node_modules/@mui/icons-material/esm/AddPhotoAlternateOutlined.js","Components/Views/ImageUploadWidget.tsx","Views/Courses/CreateCoursePreviewImageView.tsx","Views/Courses/CreateCourseView.tsx","Pages/Courses/CreateCoursePage.tsx","../node_modules/@mui/icons-material/esm/Add.js","../node_modules/@mui/icons-material/esm/DeleteOutlineOutlined.js"],"sourcesContent":["import { Container } from '@mui/material';\nimport { SxProps } from '@mui/system';\nimport React, { FC } from 'react';\n\ntype MainLayoutProps = {\n  children: React.ReactNode;\n  sx?: SxProps;\n};\n\nexport const MainLayout: FC<MainLayoutProps> = ({ children, sx }) => {\n  return (\n    <Container\n      sx={{\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'flex-start',\n        ...sx\n      }}\n      maxWidth={'xl'}>\n      {children}\n    </Container>\n  );\n};\n","import { Button, SxProps, TextField, Theme } from '@mui/material';\nimport { FC, Fragment, ReactNode } from 'react';\n\nexport type BaseTextFieldProps = {\n  value: string;\n  onChange: (value: string) => void;\n  label: string;\n  placeholder?: string;\n  error?: boolean;\n  disabled?: boolean;\n  helperText?: string | null;\n  maxLength?: number;\n  minLength?: number;\n  multiline?: boolean;\n  rows?: number;\n  type?: 'text' | 'password';\n  sx?: SxProps<Theme>;\n  startAdornment?: ReactNode;\n  endAdornment?: ReactNode;\n  actionTitle?: string;\n  onAction?: () => void;\n  testId: string;\n};\n\nexport const BaseTextField: FC<BaseTextFieldProps> = (props) => {\n  const {\n    value,\n    onChange,\n    label,\n    placeholder,\n    disabled,\n    error,\n    helperText,\n    maxLength,\n    minLength,\n    multiline,\n    rows,\n    type = 'text',\n    sx = {},\n    startAdornment,\n    endAdornment,\n    actionTitle,\n    onAction,\n    testId\n  } = props;\n\n  return (\n    <Fragment>\n      <TextField\n        data-testid={`${testId}-input`}\n        rows={rows}\n        multiline={multiline}\n        value={value}\n        placeholder={placeholder}\n        disabled={disabled}\n        onChange={(event) => onChange(event.target.value)}\n        sx={{ mt: 3, ...sx }}\n        size={'small'}\n        fullWidth\n        label={label}\n        variant=\"outlined\"\n        type={type}\n        error={error}\n        helperText={helperText}\n        slotProps={{\n          input: { startAdornment, endAdornment },\n          htmlInput: { maxLength, minLength }\n        }}\n      />\n      {actionTitle && (\n        <Button sx={{ mt: 1 }} size={'small'} variant={'outlined'} onClick={onAction}>\n          {actionTitle}\n        </Button>\n      )}\n    </Fragment>\n  );\n};\n","import { BasePaper } from '../Views/BasePaper';\nimport Typography from '@mui/material/Typography';\nimport { Box, SxProps, Theme } from '@mui/material';\nimport { FC, ReactNode } from 'react';\nimport IconButton from '@mui/material/IconButton';\n\nexport type ToolbarAction = {\n  icon?: ReactNode;\n  onClick?: () => void;\n  disabled?: boolean;\n  testId: string;\n};\n\ntype BaseToolbarViewProps = {\n  title: string;\n  actions?: ToolbarAction[];\n  containerSx?: SxProps<Theme>;\n  testId: string;\n};\n\nexport const BaseToolbarView: FC<BaseToolbarViewProps> = (props) => {\n  const { title, actions = [], containerSx, testId } = props;\n\n  return (\n    <BasePaper sx={containerSx}>\n      <Box sx={{ display: 'flex', alignItems: 'center' }}>\n        <Typography data-testid={`${testId}-toolbar-title-text`} variant={'h6'}>\n          {title}\n        </Typography>\n        <Box sx={{ flexGrow: 1 }} />\n        {actions.map((action, index) => (\n          <IconButton\n            key={index}\n            data-testid={`${testId}-toolbar-${action.testId}-button`}\n            sx={{ mr: actions.length === index + 1 ? 0 : 2 }}\n            onClick={action.onClick}\n            disabled={action.disabled}>\n            {action.icon}\n          </IconButton>\n        ))}\n      </Box>\n    </BasePaper>\n  );\n};\n","import { Paper } from '@mui/material';\nimport { FC, PropsWithChildren } from 'react';\nimport { SxProps } from '@mui/system';\nimport { Theme } from '@mui/material/styles';\n\ntype BasePaperProps = { sx?: SxProps<Theme> } & PropsWithChildren;\n\nexport const BasePaper: FC<BasePaperProps> = ({ children, sx }) => {\n  return <Paper sx={{ p: 2, ...sx }}>{children}</Paper>;\n};\n","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M20 6h-8l-2-2H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V8c0-1.1-.9-2-2-2m0 12H4V8h16z\"\n}), 'FolderOpenOutlined');","import { Box, SxProps, Theme, Typography } from '@mui/material';\nimport { FC, ReactNode } from 'react';\nimport FolderOpenOutlinedIcon from '@mui/icons-material/FolderOpenOutlined';\n\ntype EmptyViewProps = {\n  title: string;\n  description: string | ReactNode;\n  containerSx?: SxProps<Theme>;\n  testId: string;\n};\n\nexport const EmptyView: FC<EmptyViewProps> = ({ title, description, containerSx, testId }) => {\n  return (\n    <Box\n      sx={{\n        flexDirection: 'column',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        ...containerSx\n      }}>\n      <FolderOpenOutlinedIcon data-testid={`${testId}-empty-view-icon`} fontSize={'large'} />\n      <Typography data-testid={`${testId}-empty-view-title-text`} sx={{ mt: 2 }} variant={'h6'}>\n        {title}\n      </Typography>\n      <Typography data-testid={`${testId}-empty-view-title-text`}>{description}</Typography>\n    </Box>\n  );\n};\n","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M9 16.17 4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\"\n}), 'Check');","import { BaseToolbarView } from '../../Components/Toolbar/BaseToolbarView';\nimport CheckIcon from '@mui/icons-material/Check';\nimport { FC, useMemo } from 'react';\nimport { Course } from '../../Models/Courses/Course';\n\ntype CreateCourseToolbarViewProps = {\n  title: string;\n  course: Course;\n  onCreateCourse: () => void;\n};\n\nexport const CreateCourseToolbarView: FC<CreateCourseToolbarViewProps> = (props) => {\n  const { title, course, onCreateCourse } = props;\n\n  const isSaveDisabled = useMemo(\n    () =>\n      course.title === '' ||\n      course.minScore === 0 ||\n      course.maxScore === 0 ||\n      course.description === '' ||\n      course.previewImage === null ||\n      course.estimatedTime === '',\n    [course]\n  );\n\n  return (\n    <BaseToolbarView\n      testId={'create-course'}\n      title={title}\n      actions={[{ testId: 'create-course', icon: <CheckIcon />, onClick: onCreateCourse, disabled: isSaveDisabled }]}\n    />\n  );\n};\n","import { SxProps, TextField, Theme } from '@mui/material';\nimport { FC, ReactNode } from 'react';\n\ntype BaseNumberTextFieldProps = {\n  sx?: SxProps<Theme>;\n  value: number | '';\n  onChange: (value: number) => void;\n  label: string;\n  disabled?: boolean;\n  error?: boolean;\n  helperText?: string;\n  endAdornment?: ReactNode;\n  startAdornment?: ReactNode;\n  testId: string;\n};\n\nexport const BaseNumberTextField: FC<BaseNumberTextFieldProps> = (props) => {\n  const { sx, value, onChange, label, disabled, error, helperText, endAdornment, startAdornment, testId } = props;\n\n  return (\n    <TextField\n      data-testid={`${testId}-input`}\n      sx={{ mt: 3, ...sx }}\n      value={value.toString()}\n      onChange={(event) => onChange(Number(event.target.value))}\n      size={'small'}\n      fullWidth\n      label={label}\n      error={error}\n      disabled={disabled}\n      helperText={helperText}\n      type=\"number\"\n      InputLabelProps={{ shrink: true }}\n      InputProps={{ endAdornment, startAdornment }}\n    />\n  );\n};\n","import Box from '@mui/material/Box';\nimport { BaseTextField } from '../../TextFields/BaseTextField';\nimport { Course } from '../../../Models/Courses/Course';\nimport { FC } from 'react';\nimport { BaseNumberTextField } from '../../TextFields/BaseNumberTextField';\n\ntype CreateCourseFormProps = {\n  course: Course;\n  setCourse: (course: Course) => void;\n};\n\nexport const CreateCourseForm: FC<CreateCourseFormProps> = (props) => {\n  const { course, setCourse } = props;\n\n  const onTitle = (title: string) => setCourse({ ...course, title });\n\n  const onMinScore = (minScore: number) => setCourse({ ...course, minScore });\n\n  const onMaxScore = (maxScore: number) => setCourse({ ...course, maxScore });\n\n  const onDescription = (description: string) => setCourse({ ...course, description });\n\n  const onEstimatedTime = (estimatedTime: string) => setCourse({ ...course, estimatedTime });\n\n  return (\n    <Box>\n      <BaseTextField\n        testId={'create-course-form-title'}\n        value={course.title}\n        onChange={onTitle}\n        label={'Title'}\n        placeholder={'New course'}\n      />\n      <BaseTextField\n        testId={'create-course-form-estimated-time'}\n        value={course.estimatedTime}\n        onChange={onEstimatedTime}\n        label={'Estimated time'}\n        placeholder={'1h 20m'}\n      />\n      <BaseTextField\n        testId={'create-course-form-description'}\n        value={course.description}\n        onChange={onDescription}\n        label={'Description'}\n        multiline\n        rows={5}\n        placeholder={'Add description for course'}\n      />\n      <BaseNumberTextField\n        testId={'create-course-form-max-score'}\n        value={course.maxScore}\n        onChange={onMaxScore}\n        label={'Max score'}\n      />\n      <BaseNumberTextField\n        testId={'create-course-form-min-score'}\n        value={course.minScore}\n        onChange={onMinScore}\n        label={'Min score'}\n      />\n    </Box>\n  );\n};\n","import Box from '@mui/material/Box';\nimport { CourseExercise } from '../../../Models/Courses/CourseExercise';\nimport { FC } from 'react';\nimport { BaseTextField } from '../../TextFields/BaseTextField';\n\ntype CreateCourseExerciseFormProps = {\n  exercise: CourseExercise;\n  setExercise: (exercise: CourseExercise) => void;\n};\n\nexport const CreateCourseExerciseForm: FC<CreateCourseExerciseFormProps> = (props) => {\n  const { exercise, setExercise } = props;\n\n  const onTitle = (title: string) => setExercise({ ...exercise, title });\n\n  const onDescription = (description: string) => setExercise({ ...exercise, description });\n\n  return (\n    <Box>\n      <BaseTextField\n        testId={'create-course-exercise-form-title'}\n        value={exercise.title}\n        onChange={onTitle}\n        label={'Title'}\n      />\n      <BaseTextField\n        testId={'create-course-exercise-form-description'}\n        value={exercise.description}\n        onChange={onDescription}\n        label={'Description'}\n      />\n    </Box>\n  );\n};\n","import Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport IconButton from '@mui/material/IconButton';\nimport { ToolbarAction } from './BaseToolbarView';\nimport { FC } from 'react';\n\ntype BoxToolbarViewProps = {\n  title?: string;\n  subtitle?: string;\n  actions: ToolbarAction[];\n  testId: string;\n};\n\nexport const BoxToolbarView: FC<BoxToolbarViewProps> = (props) => {\n  const { title, subtitle, actions, testId } = props;\n\n  return (\n    <Box sx={{ display: 'flex', alignItems: 'center' }}>\n      {title && (\n        <Typography datatest-id={`${testId}-box-toolbar-title-text`} fontWeight={'bold'}>\n          {title}\n        </Typography>\n      )}\n      {subtitle && (\n        <Typography datatest-id={`${testId}-box-toolbar-subtitle-text`} variant={'body1'}>\n          {subtitle}\n        </Typography>\n      )}\n      <Box sx={{ flexGrow: 1 }} />\n      {actions.map((action, index) => (\n        <IconButton\n          key={index}\n          data-testid={`${testId}-box-toolbar-${action.testId}-button`}\n          sx={{ mr: actions.length === index + 1 ? 0 : 2 }}\n          onClick={action.onClick}\n          disabled={action.disabled}>\n          {action.icon}\n        </IconButton>\n      ))}\n    </Box>\n  );\n};\n","import Box from '@mui/material/Box';\nimport { CreateCourseExerciseForm } from '../../Components/Forms/Courses/CreateCourseExerciseForm';\nimport { CourseExercise } from '../../Models/Courses/CourseExercise';\nimport { FC } from 'react';\nimport { BoxToolbarView } from '../../Components/Toolbar/BoxToolbarView';\nimport DeleteOutlineOutlinedIcon from '@mui/icons-material/DeleteOutlineOutlined';\n\ntype CreateCourseExerciseViewProps = {\n  index: number;\n  exercise: CourseExercise;\n  setExercise: (exercise: CourseExercise) => void;\n  onDeleteExercise: () => void;\n};\n\nexport const CreateCourseExerciseView: FC<CreateCourseExerciseViewProps> = (props) => {\n  const { index, exercise, setExercise, onDeleteExercise } = props;\n  return (\n    <Box sx={{ mt: 2 }}>\n      <BoxToolbarView\n        testId={'create-course-exercise'}\n        subtitle={`#${index + 1} Exercise`}\n        actions={[{ testId: 'delete-exercise', icon: <DeleteOutlineOutlinedIcon />, onClick: onDeleteExercise }]}\n      />\n      <CreateCourseExerciseForm exercise={exercise} setExercise={setExercise} />\n    </Box>\n  );\n};\n","import Box from '@mui/material/Box';\nimport { CourseExercise } from '../../Models/Courses/CourseExercise';\nimport { FC } from 'react';\nimport { EmptyView } from '../../Components/Views/EmptyView';\nimport List from '@mui/material/List';\nimport AddIcon from '@mui/icons-material/Add';\nimport { CreateCourseExerciseView } from './CreateCourseExerciseView';\nimport { BoxToolbarView } from '../../Components/Toolbar/BoxToolbarView';\n\ntype CreateCourseExercisesViewProps = {\n  exercises: CourseExercise[];\n  setExercises: (exercises: CourseExercise[]) => void;\n};\n\nexport const CreateCourseExercisesView: FC<CreateCourseExercisesViewProps> = ({ exercises, setExercises }) => {\n  const setExercise = (newIndex: number) => (newExercise: CourseExercise) => {\n    setExercises(exercises.map((exercise, index) => (newIndex === index ? newExercise : exercise)));\n  };\n\n  const onCreateExercise = () => {\n    setExercises([...exercises, { title: 'Exercise title', description: 'Exercise description' }]);\n  };\n\n  const onDeleteExercise = (newIndex: number) => () => {\n    setExercises(exercises.filter((_, index) => newIndex !== index));\n  };\n\n  return (\n    <Box sx={{ mt: 3, mb: 7 }}>\n      <BoxToolbarView\n        testId={'create-course-exercises'}\n        title={'Exercises'}\n        actions={[{ testId: 'create-exercise', icon: <AddIcon />, onClick: onCreateExercise }]}\n      />\n      {exercises.length === 0 && (\n        <EmptyView\n          testId={'create-course-exercises'}\n          title={'There is no exercises'}\n          description={'Click on \"Create exercise\" button to create new exercise'}\n          containerSx={{ mt: 5 }}\n        />\n      )}\n      <List>\n        {exercises.map((exercise, index) => (\n          <CreateCourseExerciseView\n            key={index}\n            index={index}\n            exercise={exercise}\n            setExercise={setExercise(index)}\n            onDeleteExercise={onDeleteExercise(index)}\n          />\n        ))}\n      </List>\n    </Box>\n  );\n};\n","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19.35 10.04C18.67 6.59 15.64 4 12 4 9.11 4 6.6 5.64 5.35 8.04 2.34 8.36 0 10.91 0 14c0 3.31 2.69 6 6 6h13c2.76 0 5-2.24 5-5 0-2.64-2.05-4.78-4.65-4.96M19 18H6c-2.21 0-4-1.79-4-4 0-2.05 1.53-3.76 3.56-3.97l1.07-.11.5-.95C8.08 7.14 9.94 6 12 6c2.62 0 4.88 1.86 5.39 4.43l.3 1.5 1.53.11c1.56.1 2.78 1.41 2.78 2.96 0 1.65-1.35 3-3 3M8 13h2.55v3h2.9v-3H16l-4-4z\"\n}), 'CloudUploadOutlined');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M18 20H4V6h9V4H4c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2v-9h-2zm-7.79-3.17-1.96-2.36L5.5 18h11l-3.54-4.71zM20 4V1h-2v3h-3c.01.01 0 2 0 2h3v2.99c.01.01 2 0 2 0V6h3V4z\"\n}), 'AddPhotoAlternateOutlined');","import Button from '@mui/material/Button';\nimport { Grid2, Paper, styled } from '@mui/material';\nimport CloudUploadOutlinedIcon from '@mui/icons-material/CloudUploadOutlined';\nimport { ChangeEvent, FC } from 'react';\nimport Typography from '@mui/material/Typography';\nimport AddPhotoAlternateOutlinedIcon from '@mui/icons-material/AddPhotoAlternateOutlined';\nimport DeleteOutlineOutlinedIcon from '@mui/icons-material/DeleteOutlineOutlined';\nimport { EmptyView } from './EmptyView';\n\nconst VisuallyHiddenInput = styled('input')({\n  clip: 'rect(0 0 0 0)',\n  clipPath: 'inset(50%)',\n  height: 1,\n  overflow: 'hidden',\n  position: 'absolute',\n  bottom: 0,\n  left: 0,\n  whiteSpace: 'nowrap',\n  width: 1\n});\n\nconst ImageContainer = styled(Paper)({\n  padding: '16px',\n  height: '100%',\n  display: 'flex',\n  justifyContent: 'center'\n});\n\nconst PreviewImage = styled('img')({\n  width: '100%',\n  height: '100%',\n  borderRadius: 3\n});\n\nconst ButtonContainer = styled(Paper)({\n  padding: '16px',\n  height: '100%',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  flexDirection: 'column'\n});\n\ntype ImageUploadWidgetProps = {\n  file: string | null;\n  setFile: (file: string | null) => void;\n  width: number;\n  height: number;\n  testId: string;\n};\n\nexport const ImageUploadWidget: FC<ImageUploadWidgetProps> = (props) => {\n  const { file, setFile, width, height, testId } = props;\n\n  const onUploadFile = (event: ChangeEvent<HTMLInputElement>) => {\n    if (!event.target.files || event.target.files.length === 0) {\n      return;\n    }\n\n    const file = event.target.files[0];\n\n    if (file) {\n      const reader = new FileReader();\n\n      reader.onload = function (e) {\n        setFile(e.target?.result as string);\n      };\n\n      reader.readAsDataURL(file);\n    }\n  };\n\n  const onRemoveFile = () => setFile(null);\n\n  return (\n    <Grid2 sx={{ mt: 3 }} container spacing={2}>\n      <Grid2 size={{ xs: 12, md: 6 }} height={height + 40}>\n        <ImageContainer>\n          {file ? (\n            <PreviewImage\n              id={`${testId}-image-upload-widget-preview-image`}\n              data-testid={`${testId}-image-upload-widget-preview-image`}\n              src={file}\n              alt=\"Image Preview\"\n            />\n          ) : (\n            <EmptyView\n              title={'No image selected'}\n              description={'Preview of selected image will be displayed here'}\n              testId={testId}\n            />\n          )}\n        </ImageContainer>\n      </Grid2>\n      <Grid2 size={{ xs: 12, md: 6 }} height={height + 40}>\n        <ButtonContainer>\n          <AddPhotoAlternateOutlinedIcon data-testid={`${testId}-image-upload-widget-info-icon`} fontSize={'large'} />\n          <Typography sx={{ mt: 2 }} variant={'body1'} data-testid={`${testId}-image-upload-widget-info-title-text`}>\n            Tap on &#34;Upload image&#34; button to select file\n          </Typography>\n          <Typography variant={'caption'} data-testid={`${testId}-image-upload-widget-info-description-text`}>\n            Recommended file size {width}X{height}\n          </Typography>\n          <Button\n            data-testid={`${testId}-image-upload-widget-upload-button`}\n            sx={{ mt: 3 }}\n            component=\"label\"\n            variant=\"outlined\"\n            startIcon={<CloudUploadOutlinedIcon />}>\n            Upload image\n            <VisuallyHiddenInput\n              id={`${testId}-image-upload-widget-input`}\n              data-testid={`${testId}-image-upload-widget-input`}\n              type=\"file\"\n              onChange={onUploadFile}\n              multiple={false}\n              accept={'image/png, image/jpeg'}\n            />\n          </Button>\n          {file && (\n            <Button\n              data-testid={`${testId}-image-upload-widget-remove-button`}\n              sx={{ mt: 3 }}\n              color={'error'}\n              variant={'outlined'}\n              startIcon={<DeleteOutlineOutlinedIcon />}\n              onClick={onRemoveFile}>\n              Remove file\n            </Button>\n          )}\n        </ButtonContainer>\n      </Grid2>\n    </Grid2>\n  );\n};\n","import { FC } from 'react';\nimport { ImageUploadWidget } from '../../Components/Views/ImageUploadWidget';\n\ntype CreateCoursePreviewImageViewProps = {\n  previewImage: string | null;\n  setPreviewImage: (previewImage: string | null) => void;\n};\n\nexport const CreateCoursePreviewImageView: FC<CreateCoursePreviewImageViewProps> = (props) => {\n  const { previewImage, setPreviewImage } = props;\n\n  return (\n    <ImageUploadWidget\n      file={previewImage}\n      setFile={setPreviewImage}\n      testId={'create-course-preview'}\n      width={540}\n      height={300}\n    />\n  );\n};\n","import Box from '@mui/material/Box';\nimport { CreateCourseToolbarView } from './CreateCourseToolbarView';\nimport { CreateCourseForm } from '../../Components/Forms/Courses/CreateCourseForm';\nimport { connect, useDispatch } from 'react-redux';\nimport { useAppNavigationService } from '../../Services/HookServices/AppNavigationServiceHook';\nimport { FC } from 'react';\nimport { Course } from '../../Models/Courses/Course';\nimport { createCourse, setCourse, updateCourse } from '../../Redux/Courses/CoursesSlice';\nimport { AppRoutes } from '../../Services/Constants/Routing';\nimport { ReduxState } from '../../Redux/ReduxState';\nimport { User } from '../../Models/Users/User';\nimport { CreateCourseExercisesView } from './CreateCourseExercisesView';\nimport { CourseExercise } from '../../Models/Courses/CourseExercise';\nimport { CreateCoursePreviewImageView } from './CreateCoursePreviewImageView';\n\ntype CreateCourseViewProps = {\n  user: User | null;\n  course: Course;\n  courseId?: string;\n};\n\nconst CreateCourseView: FC<CreateCourseViewProps> = ({ user, course, courseId }) => {\n  const dispatch = useDispatch();\n  const { onNavigate } = useAppNavigationService();\n\n  const onSetCourse = (course: Course) => dispatch(setCourse(course));\n\n  const onCreateCourse = () => {\n    if (user) {\n      dispatch(createCourse({ ...course, userId: user.id }));\n      onNavigate(AppRoutes.Courses);\n    }\n  };\n\n  const onEditCourse = () => {\n    dispatch(updateCourse(course));\n    onNavigate(AppRoutes.Courses);\n  };\n\n  const setExercises = (exercises: CourseExercise[]) => onSetCourse({ ...course, exercises });\n\n  const setPreviewImage = (previewImage: string | null) => onSetCourse({ ...course, previewImage });\n\n  return (\n    <Box>\n      <CreateCourseToolbarView\n        title={courseId === 'create' ? 'Create course' : 'Update course'}\n        course={course}\n        onCreateCourse={courseId === 'create' ? onCreateCourse : onEditCourse}\n      />\n      <CreateCoursePreviewImageView previewImage={course.previewImage} setPreviewImage={setPreviewImage} />\n      <CreateCourseForm course={course} setCourse={onSetCourse} />\n      <CreateCourseExercisesView exercises={course.exercises} setExercises={setExercises} />\n    </Box>\n  );\n};\n\nconst getState = (state: ReduxState) => ({\n  user: state.users.user,\n  course: state.courses.course\n});\nexport default connect(getState)(CreateCourseView);\n","import { MainLayout } from '../../Components/Layouts/MainLayout';\nimport CreateCourseView from '../../Views/Courses/CreateCourseView';\nimport { useParams } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { setCourse } from '../../Redux/Courses/CoursesSlice';\nimport { INITIAL_COURSES } from '../../Redux/Courses/InitialState';\n\ntype Params = {\n  courseId: string;\n};\n\nconst CreateCoursePage = () => {\n  const dispatch = useDispatch();\n  const { courseId } = useParams<Params>();\n\n  useEffect(() => {\n    if (courseId !== 'create') {\n      return;\n    }\n\n    return () => {\n      dispatch(setCourse(INITIAL_COURSES.course));\n    };\n  }, []);\n\n  return (\n    <MainLayout>\n      <CreateCourseView courseId={courseId} />\n    </MainLayout>\n  );\n};\n\nexport default CreateCoursePage;\n","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6z\"\n}), 'Add');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6zM8 9h8v10H8zm7.5-5-1-1h-5l-1 1H5v2h14V4z\"\n}), 'DeleteOutlineOutlined');"],"names":["MainLayout","_ref","children","sx","_jsx","Container","display","flexDirection","justifyContent","maxWidth","BaseTextField","props","value","onChange","label","placeholder","disabled","error","helperText","maxLength","minLength","multiline","rows","type","startAdornment","endAdornment","actionTitle","onAction","testId","_jsxs","Fragment","TextField","event","target","mt","size","fullWidth","variant","slotProps","input","htmlInput","Button","onClick","BaseToolbarView","title","actions","containerSx","BasePaper","Box","alignItems","Typography","flexGrow","map","action","index","IconButton","mr","length","icon","Paper","p","createSvgIcon","d","EmptyView","description","FolderOpenOutlinedIcon","fontSize","CreateCourseToolbarView","course","onCreateCourse","isSaveDisabled","useMemo","minScore","maxScore","previewImage","estimatedTime","CheckIcon","BaseNumberTextField","toString","Number","InputLabelProps","shrink","InputProps","CreateCourseForm","setCourse","CreateCourseExerciseForm","exercise","setExercise","BoxToolbarView","subtitle","fontWeight","CreateCourseExerciseView","onDeleteExercise","DeleteOutlineOutlinedIcon","CreateCourseExercisesView","exercises","setExercises","newIndex","filter","_","mb","AddIcon","onCreateExercise","List","newExercise","VisuallyHiddenInput","styled","clip","clipPath","height","overflow","position","bottom","left","whiteSpace","width","ImageContainer","padding","PreviewImage","borderRadius","ButtonContainer","ImageUploadWidget","file","setFile","Grid2","container","spacing","xs","md","id","src","alt","AddPhotoAlternateOutlinedIcon","component","startIcon","CloudUploadOutlinedIcon","files","reader","FileReader","onload","e","_e$target","result","readAsDataURL","multiple","accept","color","onRemoveFile","CreateCoursePreviewImageView","setPreviewImage","connect","state","user","users","courses","courseId","dispatch","useDispatch","onNavigate","useAppNavigationService","onSetCourse","createCourse","userId","AppRoutes","Courses","onEditCourse","updateCourse","CreateCoursePage","useParams","useEffect","INITIAL_COURSES","CreateCourseView"],"sourceRoot":""}